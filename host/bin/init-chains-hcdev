#!/bin/bash

source /bin-holo/functions.sh

DNA_HASH=$1
APPNAME=$2
BASE_PORT=$3

ACCOUNTANT_PORT=$[BASE_PORT+0]
ACCOUNTANT_DHTPORT=$[BASE_PORT+1]
HAPP_PORT=$[BASE_PORT+2]
HAPP_DHTPORT=$[BASE_PORT+3]  # unused with hcdev

HAPP_DIR=/hosted-happs/$APPNAME
ACCOUNTANT_DIR=~/accountant

USERNAME=`whoami`

cd ~

# this hack exists to make it a little easier to switch back to using hcd
# if `hcadmin bridge` ever works, since the dna.hash will be in this location
echo "making hacky fake dna for $DNA_HASH"
mkdir -p .holochain/happ
echo $DNA_HASH > .holochain/happ/dna.hash

info "jq rewrite accountant dna.json"
TMP=$(mktemp)
jq ".Properties.hostedDnaHash = \"$DNA_HASH\" | .Properties.hostedIdentity = \"$USERNAME\"" \
   ./accountant/dna/dna.json > $TMP && mv $TMP ./accountant/dna/dna.json

info "jq rewrite accountant bridge_specs.json"
TMP=$(mktemp)
cat ./accountant/bridge_specs.json | \
jq ".[0].Path = \"$HAPP_DIR\"" \
| jq ".[0].Port = \"$HAPP_PORT\"" \
> $TMP && mv $TMP ./accountant/bridge_specs.json

# This is read by the web server to decide where to dispatch
echo $ACCOUNTANT_PORT > ~/.holo-accountant-port

info "starting service (will come online asynchronously)"
cd $ACCOUNTANT_DIR

HOLOCHAINCONFIG_DHTPORT=$ACCOUNTANT_DHTPORT \
hcdev web $ACCOUNTANT_PORT &
sleep 3  # in lieu of actually finding out if the service has started yet...
